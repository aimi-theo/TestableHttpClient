<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Codenizer.HttpClient.Testable</name>
    </assembly>
    <members>
        <member name="M:Codenizer.HttpClient.Testable.HttpRequestMessageExtensions.GetData(System.Net.Http.HttpRequestMessage)">
            <summary>
            Get the data if any from the captured request
            </summary>
            <param name="request">The captured request</param>
            <returns>Either the <c>string</c>, <c>byte</c> array or <c>null</c> that is the content of the request</returns>
        </member>
        <member name="T:Codenizer.HttpClient.Testable.MultipleResponsesConfiguredException">
            <summary>
            Thrown when multiple responses were configured for the same HTTP request
            </summary>
        </member>
        <member name="P:Codenizer.HttpClient.Testable.MultipleResponsesConfiguredException.NumberOfResponses">
            <summary>
            Gets the number of responses configured for the HTTP request
            </summary>
        </member>
        <member name="P:Codenizer.HttpClient.Testable.MultipleResponsesConfiguredException.PathAndQuery">
            <summary>
            Gets the path and query string of the responses configured for the HTTP request
            </summary>
        </member>
        <member name="T:Codenizer.HttpClient.Testable.RequestBuilder">
            <summary>
            Implements a builder to configure a response
            </summary>
        </member>
        <member name="M:Codenizer.HttpClient.Testable.RequestBuilder.#ctor(System.Net.Http.HttpMethod,System.String,System.String)">
            <summary>
            Creates a new instance that matches the HTTP method, path and query string and content types
            </summary>
            <param name="method">The HTTP method to match</param>
            <param name="pathAndQuery">The path and query string to match</param>
            <param name="contentType">The MIME type to match, <c>null</c> matches any MIME type</param>
        </member>
        <member name="M:Codenizer.HttpClient.Testable.RequestBuilder.With(System.Net.HttpStatusCode)">
            <summary>
            Respond with the given HTTP status code
            </summary>
            <param name="statusCode">The HTTP status code</param>
            <returns>The current <see cref="T:Codenizer.HttpClient.Testable.IRequestBuilder"/> instance</returns>
        </member>
        <member name="M:Codenizer.HttpClient.Testable.RequestBuilder.AndContent(System.String,System.String)">
            <summary>
            Respond with the given content
            </summary>
            <param name="mimeType">The MIME type of the response</param>
            <param name="data">The string representation of the response</param>
            <returns>The current <see cref="T:Codenizer.HttpClient.Testable.IRequestBuilder"/> instance</returns>
        </member>
        <member name="M:Codenizer.HttpClient.Testable.RequestBuilder.AndHeaders(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Add the given HTTP headers to the response
            </summary>
            <remarks>If the header already exists the supplied value will be added to it separated by a comma</remarks>
            <param name="headers">A dictionary containing the headers to add</param>
            <returns>The current <see cref="T:Codenizer.HttpClient.Testable.IRequestBuilder"/> instance</returns>
        </member>
        <member name="M:Codenizer.HttpClient.Testable.RequestBuilder.Taking(System.TimeSpan)">
            <summary>
            Delay the response
            </summary>
            <param name="time">The time to delay</param>
            <returns>The current <see cref="T:Codenizer.HttpClient.Testable.IRequestBuilder"/> instance</returns>
        </member>
        <member name="M:Codenizer.HttpClient.Testable.RequestBuilder.WhenCalled(System.Action{System.Net.Http.HttpRequestMessage})">
            <summary>
            Invoke an action when this request is made
            </summary>
            <param name="action">The action to invoke</param>
            <returns>The current <see cref="T:Codenizer.HttpClient.Testable.IRequestBuilder"/> instance</returns>
        </member>
        <member name="T:Codenizer.HttpClient.Testable.TestableMessageHandler">
            <summary>
            Implements a message handler that allows to configure predefined responses to HTTP calls.
            </summary>
        </member>
        <member name="P:Codenizer.HttpClient.Testable.TestableMessageHandler.Requests">
            <summary>
            Returns the list of requests that were captured by this message handler
            </summary>
        </member>
        <member name="P:Codenizer.HttpClient.Testable.TestableMessageHandler.ConfiguredResponses">
            <summary>
            Returns the list of responses that are configured for this message handler
            </summary>
        </member>
        <member name="M:Codenizer.HttpClient.Testable.TestableMessageHandler.#ctor">
            <summary>
            Creates a new instance without any predefined responses
            </summary>
        </member>
        <member name="M:Codenizer.HttpClient.Testable.TestableMessageHandler.RespondTo(System.String)">
            <summary>
            Respond to a GET request for the given relative path and query string
            </summary>
            <param name="pathAndQuery">The path and query string to match</param>
            <returns>A <see cref="T:Codenizer.HttpClient.Testable.IRequestBuilder"/> instance that can be used to further configure the response</returns>
        </member>
        <member name="M:Codenizer.HttpClient.Testable.TestableMessageHandler.RespondTo(System.Net.Http.HttpMethod,System.String)">
            <summary>
            Respond to a request for the given HTTP method, relative path and query string
            </summary>
            <param name="method">The HTTP method to match</param>
            <param name="pathAndQuery">The path and query string to match</param>
            <returns>A <see cref="T:Codenizer.HttpClient.Testable.IRequestBuilder"/> instance that can be used to further configure the response</returns>
        </member>
        <member name="M:Codenizer.HttpClient.Testable.TestableMessageHandler.RespondTo(System.Net.Http.HttpMethod,System.String,System.String)">
            <summary>
            Respond to a request for the given HTTP method, relative path and query string and Content-Type header
            </summary>
            <param name="method">The HTTP method to match</param>
            <param name="pathAndQuery">The path and query string to match</param>
            <param name="contentType">The MIME type to match</param>
            <returns>A <see cref="T:Codenizer.HttpClient.Testable.IRequestBuilder"/> instance that can be used to further configure the response</returns>
        </member>
        <member name="M:Codenizer.HttpClient.Testable.TestableMessageHandler.ShouldThrow(System.Exception)">
            <summary>
            Configures the handler to throw the given exception on any request that is made
            </summary>
            <param name="exception">The <see cref="T:System.Exception"/> instance to throw</param>
        </member>
        <member name="M:Codenizer.HttpClient.Testable.TestableMessageHandler.ClearConfiguredResponses">
            <summary>
            Clears the list of configured responses
            </summary>
        </member>
    </members>
</doc>
